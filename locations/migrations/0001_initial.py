# Generated by Django 5.2.7 on 2025-10-14 06:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text='ISO country code (e.g., KE, UG)', max_length=5, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.PositiveSmallIntegerField(help_text='Official county code, e.g., 042 for Kisumu', unique=True)),
                ('headquarters', models.CharField(blank=True, help_text='Administrative HQ or capital', max_length=100, null=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('area_km2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('governor', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('map_coordinates', models.CharField(blank=True, help_text='Optional latitude,longitude for map centering (e.g., -0.0917,34.7680)', max_length=255, null=True)),
                ('country', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='counties', to='locations.country')),
            ],
            options={
                'verbose_name_plural': 'Counties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LocationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('record_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Location Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('headquarters', models.CharField(blank=True, max_length=100, null=True)),
                ('area_km2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcounties', to='locations.county')),
            ],
            options={
                'verbose_name_plural': 'Sub-counties',
                'ordering': ['name'],
                'unique_together': {('county', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('area_km2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('representative', models.CharField(blank=True, help_text='MCA or ward admin', max_length=120, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wards', to='locations.subcounty')),
            ],
            options={
                'verbose_name_plural': 'Wards',
                'ordering': ['name'],
                'unique_together': {('sub_county', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('coordinates', models.CharField(blank=True, help_text='Approximate latitude,longitude for map pinning', max_length=255, null=True)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='villages', to='locations.ward')),
            ],
            options={
                'verbose_name_plural': 'Villages',
                'ordering': ['name'],
                'unique_together': {('ward', 'name')},
            },
        ),
    ]
